@using Microsoft.AspNetCore.Identity
@using TESNS.Models
@using TESNS.Models.Authentication
@using TESNS.ViewModels
@model CreatePostViewModel
@inject ApplicationDbContext _context
@inject UserManager<AppUser> UserManager
@inject SignInManager<AppUser> SignInManager
@{
    var currentUser = await UserManager.GetUserAsync(User);
    CreatePostViewModel createPostViewModel = new CreatePostViewModel();
    ViewData["Title"] = "Home Page";
}

<div id="user-content" style="margin:0px;">

     @if (SignInManager.IsSignedIn(User)) {
        var user = _context.Users.FirstOrDefault(u => u.Id == currentUser.Id);
        var profilePhoto = user?.ProfilePhoto;
        var userName = user?.UserName;
        <div class="note-card" style="display:flex;flex-direction:row;">
            <div class="user-profile">
                <img class="profile-picture" src="@profilePhoto">
                <div class="username">@userName</div>
            </div>

            <textarea oninput="autoResize(this)" data-bs-toggle="modal" data-bs-target="#sendPostModal">How Do You Feel Today ^-^</textarea>
            <div class="send-button">
                <button disabled type="submit">Send</button>
            </div>
        </div>

    }
    @{
        var posts = _context.Posts.ToList(); // Retrieve posts from the database before the loop
    }

    @foreach(var item in posts.OrderByDescending(i => i.PublishDate))
    {
        <div style="" class="modal" id="reportModal_@item.Id">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Report Community Rule Violation</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        @{
                            var author = _context.Users.FirstOrDefault(i => i.Id == item.UserId);
                            var authorName = author?.UserName;
                        }
                        <p>Why do you want to report @authorName?</p>
                        <textarea class="explain" placeholder="Explain here"></textarea>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <form method="post" asp-action="DeletePost" asp-controller="Post">
                            <input type="hidden" name="id" value="@item.Id" />
                            <button type="submit" class="btn btn-danger">Report</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
        <div style="" class="modal" id="deleteModal_@item.Id">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">WARNING</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        Are you sure you want to delete this post? The delete process cannot be undone!
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <form method="post" asp-action="DeletePost" asp-controller="Post">
                            <input type="hidden" name="id" value="@item.Id" />
                            <button type="submit" class="btn btn-danger">Delete</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        var user = _context.Users.FirstOrDefault(u => u.Id == item.UserId);
        var profilePhoto = user?.ProfilePhoto;
        var userName = user?.UserName;

        <div class="note-card">
            <div class="user-profile">
                <img class="profile-picture" src="@profilePhoto">
                <div class="username">@userName</div>
            </div>
            <div class="text-break">@item.Text</div>
            <div class="date">@item.PublishDate</div>
            <div class="settings">
                <a href="#" style="text-decoration:none;" data-bs-toggle="dropdown" aria-expanded="false">
                    <i class="bi bi-three-dots"></i>
                </a>
                <ul class="dropdown-menu">
                    @if (SignInManager.IsSignedIn(User))
                    {
                        if (currentUser.Id == item.UserId)
                        {
                            <li><a class="dropdown-item" href="#">Update <i class="bi bi-pencil"></i></a></li>
                            <li>
                                <a class="dropdown-item" href="#" data-bs-toggle="modal" data-bs-target="#deleteModal_@item.Id">Delete <i class="bi bi-trash"></i></a>
                            </li>
                            <li class="dropdown-caret"></li>
                        }
                        else
                        {
                            <li><hr class="dropdown-divider"></li>
                            <li><a class="dropdown-item" data-bs-toggle="modal" data-bs-target="#reportModal_@item.Id">Report <i class="bi bi-flag"></i></a></li>
                            <li class="dropdown-caret"></li>
                        }
                    }
                    else
                    {
                        <li><hr class="dropdown-divider"></li>
                        <li><a class="dropdown-item" data-bs-toggle="modal" data-bs-target="#reportModal_@item.Id">Report <i class="bi bi-flag"></i></a></li>
                        <li class="dropdown-caret"></li>
                    }

                </ul>

            </div>

            <div class="image-container">
                <img src="@item.ImagePath">
            </div>

            <div class="feedback" style="display: flex; justify-content: center; align-items: center;">
                <div style="border: 1px solid;border-radius: 5px;margin-left: 10px;padding: 7px 10px 7px 10px;">
                    <a id="likeBtn" href="javascript:likeFunc(@item.Id);" style="btn btn-primary;text-decoration: none;color: #888;">Like</a>
                    <span id="likeCount_@item.Id">@item.LikeCount </span><span><i class="bi bi-heart-fill"></i></span>
                </div>
                <div style="border: 1px solid;border-radius: 5px;margin-left: 10px;padding: 7px 10px 7px 10px;">
                    <a style="btn btn-primary;text-decoration: none;color: #888;" asp-controller="Post" asp-action="GetPost" asp-route-id="@item.Id">Comment</a>
                    <span>@item.CommentCount <i class="bi bi-chat-left-fill"></i></span>
                </div>
                <div style="border: 1px solid; border-radius: 5px; margin-left: 10px; padding: 7px 10px 7px 10px;">
                    <a href="#" class="copyButton" onclick="copyURL('@item.Id', this)" style="btn btn-primary; text-decoration: none; color: #888;">Share</a>
                    <span><i class="bi bi-send-fill"></i></span>
                </div>
            </div>



        </div>
    }
</div>

<script>
    function likeFunc(postId) {
        debugger;
        $.ajax({
            type: 'POST',
            url: '/Post/PostLike',
            data: {id : postId},
            success: function (result) {
                debugger;
                $("#likeCount_"+postId).html(result.like);
            },
            error: function (error) {
                debugger;
                console.error('POST isteği başarısız. Hata:', error);
            }
        });
    }
</script>